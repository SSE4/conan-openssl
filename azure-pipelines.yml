# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
variables:
  CONAN_VISUAL_VERSIONS: 16
  CONAN_REFERENCE: "OpenSSL/1.1.1c"
  CONAN_USERNAME: "conan"
  CONAN_LOGIN_USERNAME: "conanbot"
  CONAN_CHANNEL: "release"
  CONAN_UPLOAD: "https://api.bintray.com/conan/conan-community/conan"
  CONAN_UPLOAD_ONLY_WHEN_STABLE: "0"
  CONAN_STABLE_BRANCH_PATTERN: "release/*"
  CONAN_TOTAL_PAGES: 2
  CONAN_BUILD_POLICY: "outdated"
  CONAN_VERBOSE_TRACEBACK: 1
  CONAN_LOGGING_LEVEL: 10
jobs:
- job: windows2019
  pool:
    vmImage: 'windows-2019'
  steps:
  - script: |
      reg query HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\Tcpip\Parameters /v KeepAliveTime || echo ignore
      reg query HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\Tcpip\Parameters /v KeepAliveInterval || echo ignore
      pip.exe install requests
      pip.exe freeze
      pip.exe install conan_package_tools
      pip.exe install git+https://github.com/SSE4/conan.git@connection_reset
      python.exe build.py
- job: win2016
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - script: |
      reg query HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\Tcpip\Parameters /v KeepAliveTime || echo ignore
      reg query HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\Tcpip\Parameters /v KeepAliveInterval || echo ignore
      pip.exe install requests
      pip.exe freeze
      pip.exe install conan_package_tools
      pip.exe install git+https://github.com/SSE4/conan.git@connection_reset
      python.exe build.py

